#pragma once

#include "core/constant.hpp" // IWYU pragma: keep

namespace FONT {
 constexpr s8 WIDTH = 4;
 constexpr s8 HEIGHT = 8;
}

constexpr u32 CHARACTER(u32 ordinal) {
 return
 (ordinal == 9617) ? 0b00000101000001010000010100000101 : // " ░ "
 (ordinal == 9618) ? 0b10100101101001011010010110100101 : // " ▒ "
 (ordinal == 9619) ? 0b10101111101011111010111110101111 : // " ▓ "
 (ordinal == 9608) ? 0b11111111111111111111111111111111 : // " █ "
 (ordinal == 9472) ? 0b00000000000011110000000000000000 : // " ─ "
 (ordinal == 9474) ? 0b00100010001000100010001000100010 : // " │ "
 (ordinal == 9484) ? 0b00100010001011100000000000000000 : // " ┌ "
 (ordinal == 9488) ? 0b00100010001000110000000000000000 : // " ┐ "
 (ordinal == 9492) ? 0b00000000000011100010001000100010 : // " └ "
 (ordinal == 9496) ? 0b00000000000000110010001000100010 : // " ┘ "
 (ordinal == 9500) ? 0b00100010001011100010001000100010 : // " ├ "
 (ordinal == 9508) ? 0b00100010001000110010001000100010 : // " ┤ "
 (ordinal == 9516) ? 0b00100010001011110000000000000000 : // " ┬ "
 (ordinal == 9524) ? 0b00000000000011110010001000100010 : // " ┴ "
 (ordinal == 9532) ? 0b00100010001011110010001000100010 : // " ┼ "
 (ordinal == 8226) ? 0b00000000000000100000000000000000 : // " • "
 (ordinal == 176) ? 0b00000000000001110101011100000000 : // " ° "
 (ordinal == 169) ? 0b00001111100111011001111100000000 : // " © "
 (ordinal == 174) ? 0b00001111110111011001111100000000 : // " ® "
 (ordinal == 8482) ? 0b00001010111011100010011100000000 : // " ™ "
 (ordinal == 33) ? 0b00000000001000000010001000000000 : // " ! "
 (ordinal == 34) ? 0b00000000000000000101010100000000 : // " " "
 (ordinal == 35) ? 0b00000101011101010111010100000000 : // " # "
 (ordinal == 36) ? 0b00000010011100100111001000000000 : // " $ "
 (ordinal == 37) ? 0b00000000010100110110010100000000 : // " % "
 (ordinal == 38) ? 0b00000000011001010011011000000000 : // " & "
 (ordinal == 39) ? 0b00000000000000000010001000000000 : // " ' "
 (ordinal == 40) ? 0b00000100001000100010010000000000 : // " ( "
 (ordinal == 41) ? 0b00000010010001000100001000000000 : // " ) "
 (ordinal == 42) ? 0b00000000000001010010010100000000 : // " * "
 (ordinal == 43) ? 0b00000000001001110010000000000000 : // " + "
 (ordinal == 44) ? 0b00000010001000000000000000000000 : // " , "
 (ordinal == 45) ? 0b00000000000001110000000000000000 : // " - "
 (ordinal == 46) ? 0b00000000001000000000000000000000 : // " . "
 (ordinal == 47) ? 0b00000001000100100100010000000000 : // " / "
 (ordinal == 48) ? 0b00000000001101010101011000000000 : // " 0 "
 (ordinal == 49) ? 0b00000000011100100010001100000000 : // " 1 "
 (ordinal == 50) ? 0b00000000011100100100011100000000 : // " 2 "
 (ordinal == 51) ? 0b00000000011101000110011100000000 : // " 3 "
 (ordinal == 52) ? 0b00000000010001110101010100000000 : // " 4 "
 (ordinal == 53) ? 0b00000000011101000011011100000000 : // " 5 "
 (ordinal == 54) ? 0b00000000011101110001011100000000 : // " 6 "
 (ordinal == 55) ? 0b00000000010001000100011100000000 : // " 7 "
 (ordinal == 56) ? 0b00000000011101010111011100000000 : // " 8 "
 (ordinal == 57) ? 0b00000000010001110101011100000000 : // " 9 "
 (ordinal == 58) ? 0b00000000001000000010000000000000 : // " : "
 (ordinal == 59) ? 0b00000010001000000010000000000000 : // " ; "
 (ordinal == 60) ? 0b00000100001000010010010000000000 : // " < "
 (ordinal == 61) ? 0b00000000011100000111000000000000 : // " = "
 (ordinal == 62) ? 0b00000001001001000010000100000000 : // " > "
 (ordinal == 63) ? 0b00000000001000000100011100000000 : // " ? "
 (ordinal == 64) ? 0b00000000011000010101001000000000 : // " @ "
 (ordinal == 65) ? 0b00000000010101110101011100000000 : // " A "
 (ordinal == 66) ? 0b00000000011101010111001100000000 : // " B "
 (ordinal == 67) ? 0b00000000011100010001011100000000 : // " C "
 (ordinal == 68) ? 0b00000000001101010101001100000000 : // " D "
 (ordinal == 69) ? 0b00000000011100010011011100000000 : // " E "
 (ordinal == 70) ? 0b00000000000100110001011100000000 : // " F "
 (ordinal == 71) ? 0b00000000011101010001011100000000 : // " G "
 (ordinal == 72) ? 0b00000000010101110101010100000000 : // " H "
 (ordinal == 73) ? 0b00000000011100100010011100000000 : // " I "
 (ordinal == 74) ? 0b00000000011101010100010000000000 : // " J "
 (ordinal == 75) ? 0b00000000010100110101010100000000 : // " K "
 (ordinal == 76) ? 0b00000000011100010001000100000000 : // " L "
 (ordinal == 77) ? 0b00000000010101010111011100000000 : // " M "
 (ordinal == 78) ? 0b00000000010101010101011100000000 : // " N "
 (ordinal == 79) ? 0b00000000011101010101011100000000 : // " O "
 (ordinal == 80) ? 0b00000000000101110101011100000000 : // " P "
 (ordinal == 81) ? 0b00000000010001110101011100000000 : // " Q "
 (ordinal == 82) ? 0b00000000010100110101011100000000 : // " R "
 (ordinal == 83) ? 0b00000000011101000001011100000000 : // " S "
 (ordinal == 84) ? 0b00000000001000100010011100000000 : // " T "
 (ordinal == 85) ? 0b00000000011101010101010100000000 : // " U "
 (ordinal == 86) ? 0b00000000001001010101010100000000 : // " V "
 (ordinal == 87) ? 0b00000000011101110101010100000000 : // " W "
 (ordinal == 88) ? 0b00000000010100100101010100000000 : // " X "
 (ordinal == 89) ? 0b00000000001001110101010100000000 : // " Y "
 (ordinal == 90) ? 0b00000000011100010100011100000000 : // " Z "
 (ordinal == 91) ? 0b00000110001000100010011000000000 : // " [ "
 (ordinal == 92) ? 0b00000100010000100001000100000000 : // " \\ "
 (ordinal == 93) ? 0b00000110010001000100011000000000 : // " ] "
 (ordinal == 94) ? 0b00000000000000000101001000000000 : // " ^ "
 (ordinal == 95) ? 0b00000000011100000000000000000000 : // " _ "
 (ordinal == 96) ? 0b00000000000000000100001000000000 : // " ` "
 (ordinal == 97) ? 0b00000000011101010110000000000000 : // " a "
 (ordinal == 98) ? 0b00000000011101010111000100000000 : // " b "
 (ordinal == 99) ? 0b00000000011100010111000000000000 : // " c "
 (ordinal == 100) ? 0b00000000011101010111010000000000 : // " d "
 (ordinal == 101) ? 0b00000000001101010111000000000000 : // " e "
 (ordinal == 102) ? 0b00000001001100010111000000000000 : // " f "
 (ordinal == 103) ? 0b00000110011101010111000000000000 : // " g "
 (ordinal == 104) ? 0b00000000010101010111000100000000 : // " h "
 (ordinal == 105) ? 0b00000000001000100000001000000000 : // " i "
 (ordinal == 106) ? 0b00000011001000100000001000000000 : // " j "
 (ordinal == 107) ? 0b00000000010100110101000100000000 : // " k "
 (ordinal == 108) ? 0b00000000011000100010001000000000 : // " l "
 (ordinal == 109) ? 0b00000000010101110111000000000000 : // " m "
 (ordinal == 110) ? 0b00000000010101010111000000000000 : // " n "
 (ordinal == 111) ? 0b00000000011101010111000000000000 : // " o "
 (ordinal == 112) ? 0b00000001011101010111000000000000 : // " p "
 (ordinal == 113) ? 0b00000100011101010111000000000000 : // " q "
 (ordinal == 114) ? 0b00000000000100010111000000000000 : // " r "
 (ordinal == 115) ? 0b00000000001100100110000000000000 : // " s "
 (ordinal == 116) ? 0b00000000011000100111001000000000 : // " t "
 (ordinal == 117) ? 0b00000000011101010101000000000000 : // " u "
 (ordinal == 118) ? 0b00000000001001010101000000000000 : // " v "
 (ordinal == 119) ? 0b00000000011101110101000000000000 : // " w "
 (ordinal == 120) ? 0b00000000010100100101000000000000 : // " x "
 (ordinal == 121) ? 0b00000110011101010101000000000000 : // " y "
 (ordinal == 122) ? 0b00000000011000100011000000000000 : // " z "
 (ordinal == 123) ? 0b00000110001000110010011000000000 : // " { "
 (ordinal == 124) ? 0b00000010001000100010001000000000 : // " | "
 (ordinal == 125) ? 0b00000011001001100010001100000000 : // " } "
 (ordinal == 126) ? 0b00000000000000110110000000000000 : // " ~ "
 0b11111111110111111011100111111111; // " � "
}

constexpr u32 utf8_ordinal(str& s) {
 u8 c = *s++;
 if (c < 0x80) {
  return c;
 } else if ((c & 0xE0) == 0xC0) {
  u8 c2 = *s++;
  return ((c & 0x1F) << 6) | (c2 & 0x3F);
 } else if ((c & 0xF0) == 0xE0) {
  u8 c2 = *s++;
  u8 c3 = *s++;
  return ((c & 0x0F) << 12) | ((c2 & 0x3F) << 6) | (c3 & 0x3F);
 } else if ((c & 0xF8) == 0xF0) {
  u8 c2 = *s++;
  u8 c3 = *s++;
  u8 c4 = *s++;
  return ((c & 0x07) << 18) | ((c2 & 0x3F) << 12) | ((c3 & 0x3F) << 6) | (c4 & 0x3F);
 }
 return 65533;
}
